Using an excessive number of cores has a diminishing return! It is recommended not to exceed 8 cores per trimming process (you asked for 8 cores). Please consider re-specifying
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.1
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 8 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /home/rstudio/dkt/projects/project/exp/02_trimming/output/test/
Using user-specified basename (>>test<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input/test_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
smallRNA	0	TGGAATTCTCGG	2232	0.00
Nextera	0	CTGTCTCTTATA	2232	0.00
Illumina	0	AGATCGGAAGAGC	2232	0.00
Unable to auto-detect most prominent adapter from the first specified file (count smallRNA: 0, count Nextera: 0, count Illumina: 0)
Defaulting to Illumina universal adapter ( AGATCGGAAGAGC ). Specify -a SEQUENCE to avoid this behavior).

Writing report to '/home/rstudio/dkt/projects/project/exp/02_trimming/output/test/test_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: input/test_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.7
Cutadapt version: 4.1
Python version: could not detect
Number of cores used for trimming: 8
Quality Phred score cutoff: 30
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 30 bp
Removing Ns from the start and end of reads
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.1). Setting -j 8
Writing final adapter and quality trimmed output to test_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 30') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input/test_1.fastq.gz <<< 
This is cutadapt 4.1 with Python 3.10.5
Command line parameters: -j 8 -e 0.1 -q 30 -O 1 --trim-n -a AGATCGGAAGAGC input/test_1.fastq.gz
Processing single-end reads on 8 cores ...
Finished in 0.06 s (28 µs/read; 2.16 M reads/minute).

=== Summary ===

Total reads processed:                   2,232
Reads with adapters:                       610 (27.3%)
Reads written (passing filters):         2,232 (100.0%)

Total basepairs processed:       318,741 bp
Quality-trimmed:                     792 bp (0.2%)
Total written (filtered):        317,081 bp (99.5%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 610 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 47.7%
  C: 1.1%
  G: 13.4%
  T: 37.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	506	558.0	0	506
2	44	139.5	0	44
3	52	34.9	0	52
4	8	8.7	0	8

RUN STATISTICS FOR INPUT FILE: input/test_1.fastq.gz
=============================================
2232 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/home/rstudio/dkt/projects/project/exp/02_trimming/output/test/test_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: ./input/test_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.7
Cutadapt version: 4.1
Python version: could not detect
Number of cores used for trimming: 8
Quality Phred score cutoff: 30
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 30 bp
Removing Ns from the start and end of reads
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.1). Setting -j -j 8
Writing final adapter and quality trimmed output to test_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 30') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file ./input/test_2.fastq.gz <<< 
This is cutadapt 4.1 with Python 3.10.5
Command line parameters: -j 8 -e 0.1 -q 30 -O 1 --trim-n -a AGATCGGAAGAGC ./input/test_2.fastq.gz
Processing single-end reads on 8 cores ...
Finished in 0.07 s (31 µs/read; 1.91 M reads/minute).

=== Summary ===

Total reads processed:                   2,232
Reads with adapters:                       709 (31.8%)
Reads written (passing filters):         2,232 (100.0%)

Total basepairs processed:       297,104 bp
Quality-trimmed:                   2,410 bp (0.8%)
Total written (filtered):        293,979 bp (98.9%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 709 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 59.9%
  C: 13.4%
  G: 0.8%
  T: 25.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	706	558.0	0	706
2	2	139.5	0	2
5	1	2.2	0	1

RUN STATISTICS FOR INPUT FILE: ./input/test_2.fastq.gz
=============================================
2232 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files test_1_trimmed.fq.gz and test_2_trimmed.fq.gz
Now renaming the output files

ORIGINAL FILE 1: >>test_1_trimmed.fq.gz<<	RENAMING TO:>>test_R1_trimmed.fq.gz<<
ORIGINAL FILE 2: >>test_2_trimmed.fq.gz<<	RENAMING TO:>>test_R2_trimmed.fq.gz<<
file_1: test_R1_trimmed.fq.gz, file_2: test_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: test_R1_trimmed.fq.gz and test_R2_trimmed.fq.gz <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to test_val_1.fq.gz
Writing validated paired-end Read 2 reads to test_val_2.fq.gz

Total number of sequences analysed: 2232

Number of sequence pairs removed because at least one read was shorter than the length cutoff (30 bp): 11 (0.49%)

Deleting both intermediate output files test_R1_trimmed.fq.gz and test_R2_trimmed.fq.gz

====================================================================================================

